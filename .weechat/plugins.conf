#
# plugins.conf -- weechat v0.4.0-rc1
#

[var]
fifo.fifo = "on"
lua.check_license = "on"
perl.beep.beep_command_dcc = "$bell"
perl.beep.beep_command_highlight = "$bell"
perl.beep.beep_command_pv = "$bell"
perl.beep.beep_command_timeout = "30000"
perl.beep.beep_dcc = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_highlight_blacklist = "off"
perl.beep.beep_highlight_whitelist = "off"
perl.beep.beep_pv = "on"
perl.beep.beep_pv_blacklist = "off"
perl.beep.beep_pv_whitelist = "off"
perl.beep.beep_trigger_highlight = ""
perl.beep.beep_trigger_pv = ""
perl.beep.bell_always = ""
perl.beep.blacklist_nicks = ""
perl.beep.whitelist_channels = ""
perl.beep.whitelist_nicks = ""
perl.chanmon.alignment = "channel"
perl.chanmon.bar_lines = "10"
perl.chanmon.color_buf = "on"
perl.chanmon.dynamic = "on"
perl.chanmon.freenode.#android = "off"
perl.chanmon.freenode.#android-dev = "on"
perl.chanmon.freenode.#blender = "off"
perl.chanmon.freenode.#cakephp = "on"
perl.chanmon.freenode.#cloudfreestyle = "on"
perl.chanmon.freenode.#duckduckgo = "off"
perl.chanmon.freenode.#fedwiki = "on"
perl.chanmon.freenode.#gentoo = "off"
perl.chanmon.freenode.#git = "on"
perl.chanmon.freenode.#nginx = "on"
perl.chanmon.freenode.#ops-blend = "on"
perl.chanmon.freenode.#pairup = "on"
perl.chanmon.freenode.#pentadactyl = "on"
perl.chanmon.freenode.#phonegap = "on"
perl.chanmon.freenode.#pry = "on"
perl.chanmon.freenode.#regex = "on"
perl.chanmon.freenode.#ruboto = "on"
perl.chanmon.freenode.#ruby = "on"
perl.chanmon.freenode.#ruby-lang = "on"
perl.chanmon.freenode.#rubyonrails = "on"
perl.chanmon.freenode.#rxvt-unicode = "on"
perl.chanmon.freenode.#stackato = "on"
perl.chanmon.freenode.#tfnsmilrgk = "on"
perl.chanmon.freenode.#tmux = "on"
perl.chanmon.freenode.#vim = "on"
perl.chanmon.freenode.#weechat = "on"
perl.chanmon.freenode.#xmonad = "on"
perl.chanmon.freenode.#yard = "on"
perl.chanmon.freenode.#yii = "on"
perl.chanmon.freenode.#zsh = "on"
perl.chanmon.logging = "off"
perl.chanmon.merge_private = "off"
perl.chanmon.moz.#firefox = "off"
perl.chanmon.nick_prefix = ""
perl.chanmon.nick_suffix = ""
perl.chanmon.output = "buffer"
perl.chanmon.short_names = "on"
perl.chanmon.show_aways = "off"
perl.check_license = "on"
perl.expand_url.color = "blue"
perl.expand_url.color_prefix = "blue"
perl.expand_url.expand_own = "off"
perl.expand_url.expander = "http://untiny.me/api/1.0/extract?url= http://api.longurl.org/v1/expand?url= http://expandurl.com/api/v1/?url="
perl.expand_url.prefix = "[url]"
perl.expand_url.shortener = "t.co/|goo.gl|tiny.cc|bit.ly|is.gd|tinyurl.com|ur1.ca"
python.autojoin.autosave = "off"
python.check_license = "on"
python.cmd_help.color_alias = "white"
python.cmd_help.color_alias_name = "green"
python.cmd_help.color_alias_value = "green"
python.cmd_help.color_arguments = "cyan"
python.cmd_help.color_delimiters = "lightgreen"
python.cmd_help.color_list = "green"
python.cmd_help.color_list_count = "white"
python.cmd_help.color_no_help = "red"
python.cmd_help.color_option_help = "brown"
python.cmd_help.color_option_name = "yellow"
python.cmd_help.display_no_help = "on"
python.cmd_help.format_option = "(${white:type}) ${description_nls}"
python.cmd_help.ignore_commands = "map,me,die,restart"
python.cmd_help.max_options = "5"
python.cmd_help.prefix = "["
python.cmd_help.right_align = "off"
python.cmd_help.right_padding = "15"
python.cmd_help.space = "2"
python.cmd_help.start_on_load = "off"
python.cmd_help.stop_on_enter = "on"
python.cmd_help.suffix = "]"
python.cmd_help.timer = "0"
python.floodit.colors = "blue,red,green,yellow,magenta,cyan"
python.floodit.zoom = ""
python.go.color_name = "black,cyan"
python.go.color_name_highlight = "red,cyan"
python.go.color_name_highlight_selected = "red,brown"
python.go.color_name_selected = "black,brown"
python.go.color_number = "yellow,magenta"
python.go.color_number_selected = "yellow,red"
python.go.message = "Go to: "
python.go.short_name = "off"
python.go.sort_by_activity = "off"
python.go.use_core_instead_weechat = "off"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = "sharpsaw.org"
python.urlserver.http_hostname_display = ""
python.urlserver.http_port = "9909"
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = ""
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "1000"
ruby.check_license = "on"
tcl.check_license = "on"

[desc]
perl.beep.beep_command_dcc = "command for beep on dcc, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_highlight = "command for beep on highlight, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_pv = "command for beep on private message, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_timeout = "timeout for command run (in milliseconds, 0 = never kill (not recommended)) (default: "30000")"
perl.beep.beep_dcc = "beep on dcc (default: "on")"
perl.beep.beep_highlight = "beep on highlight (default: "on")"
perl.beep.beep_highlight_blacklist = "turn blacklist for highlights on or off (default: "off")"
perl.beep.beep_highlight_whitelist = "turn whitelist for highlights on or off (default: "off")"
perl.beep.beep_pv = "beep on private message (default: "on")"
perl.beep.beep_pv_blacklist = "turn blacklist for private messages on or off (default: "off")"
perl.beep.beep_pv_whitelist = "turn whitelist for private messages on or off (default: "off")"
perl.beep.beep_trigger_highlight = "word that will trigger execution of beep_command_highlight (if empty, anything will trigger) (default: "")"
perl.beep.beep_trigger_pv = "word that will trigger execution of beep_command_pv (it empty, anything will trigger) (default: "")"
perl.beep.bell_always = "use $bell on private messages and/or highlights regardless of trigger and whitelist settings (example: "pv,highlight") (default: "")"
perl.beep.blacklist_nicks = "comma-separated list of "server.nick": if not empty, these nicks will not be able to trigger execution of commands. Cannot be used in conjuction with whitelist (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.beep.whitelist_channels = "comma-separated list of "server.#channel": if not empty, only these channels will trigger execution of commands (example: "freenode.#weechat,freenode.#channel2") (default: "")"
perl.beep.whitelist_nicks = "comma-separated list of "server.nick": if not empty, only these nicks will trigger execution of commands (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.expand_url.color = "color to use for expanded url in buffer"
perl.expand_url.color_prefix = "color for prefix"
perl.expand_url.expand_own = "own shortened urls will be expanded (on|off)"
perl.expand_url.expander = "list of expander to use in script. Please use a space " " to separate expander"
perl.expand_url.prefix = "displayed prefix. You can use item "%nick" to display nick in prefix (default: [url])"
perl.expand_url.shortener = "list of know shortener. "|" separated list"
python.cmd_help.color_alias = "color for text "Alias" (default: "white")"
python.cmd_help.color_alias_name = "color for alias name (default: "green")"
python.cmd_help.color_alias_value = "color for alias value (default: "green")"
python.cmd_help.color_arguments = "color for command arguments (default: "cyan")"
python.cmd_help.color_delimiters = "color for delimiters (default: "lightgreen")"
python.cmd_help.color_list = "color for list of commands/options (default: "green")"
python.cmd_help.color_list_count = "color for number of commands/options in list found (default: "white")"
python.cmd_help.color_no_help = "color for text "No help" (default: "red")"
python.cmd_help.color_option_help = "color for help on option (default: "brown")"
python.cmd_help.color_option_name = "color for name of option found (by adding "*" to option name) (default: "yellow")"
python.cmd_help.display_no_help = "display "No help" when command is not found (default: "on")"
python.cmd_help.format_option = "format of help for options: free text with identifiers using format: ${name} or ${color:name}: color is a WeeChat color (optional), name is a field of infolist "option": full_name, config_name, section_name, option_name, description, description_nls, string_values, min, max, null_value_allowed, value_is_null, default_value_is_null, type, value, default_value (default: "(${white:type}) ${description_nls}")"
python.cmd_help.ignore_commands = "comma-separated list of commands (without leading "/") to ignore (default: "map,me,die,restart")"
python.cmd_help.max_options = "max number of options displayed in list (default: "5")"
python.cmd_help.prefix = "string displayed before help (default: "[")"
python.cmd_help.right_align = "align help to right (default: "off")"
python.cmd_help.right_padding = "padding to right when aligned to right (default: "15")"
python.cmd_help.space = "minimum space before help (default: "2")"
python.cmd_help.start_on_load = "auto start help when script is loaded (default: "off")"
python.cmd_help.stop_on_enter = "enter key stop help (default: "on")"
python.cmd_help.suffix = "string displayed after help (default: "]")"
python.cmd_help.timer = "number of seconds help is displayed (0 = display until help is toggled) (default: "0")"
python.floodit.colors = "comma-separated list of 6 colors for squares (default: "blue,red,green,yellow,magenta,cyan")"
python.floodit.zoom = "zoom for board (0-N, empty means automatic zoom according to size of window) (default: "")"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed (default: "darkgray")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (default: "")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
